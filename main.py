import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, FSInputFile, CallbackQuery

from keyboards import *
from database_manager import DatabaseManager
from config import TEST_FIELD_TOKEN, ADMIN_ID, CREATOR_ID, GREETING, DEFAULT_ANSWER

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)
logger = logging.getLogger('Anonka')

bot = Bot(token=TEST_FIELD_TOKEN)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –ë–î
database = DatabaseManager()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
awaiting_message = {}


@dp.message(Command("start"))
async def start(message: Message):
    try:
        user = message.from_user
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É")

        greeting_image = FSInputFile(
            r"C:\Users\admin\Desktop\–ü—Ä–æ–µ–∫—Ç—ã\Bots\–ë–µ—Å–ø–ª–∞—Ç–Ω–æ\–ê–Ω–æ–Ω–∏–º–∫–∞ –ù–∏–∫–∏\start_image.jpg",
            filename="start_image.jpg"
        )

        keyboard = await default_keyboard()

        await message.answer_photo(
            photo=greeting_image,
            caption=GREETING,
            parse_mode="HTML",
            reply_markup=keyboard.as_markup()
        )
    except Exception as e:
        logger.error(e)


@dp.callback_query(F.data == "send_message")
async def request_message(callback: CallbackQuery):
    try:
        user_id = callback.from_user.id
        awaiting_message[user_id] = True

        await callback.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ—ë –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ request_message: {e}")
        await callback.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@dp.callback_query(F.data == "user_game_mode")
async def game_mode(callback: CallbackQuery):
    user_id = callback.from_user.id
    admin_keyboard = await admin_game_mode_keyboard()
    user_keyboard = await user_game_mode_keyboard()

    if user_id == ADMIN_ID:
        await callback.message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞",
            reply_markup=admin_keyboard
        )

    await callback.message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º",
        reply_markup=user_keyboard
    )
    await callback.answer()

@dp.message()
async def handle_user_message(message: Message):
    try:
        user_id = message.from_user.id

        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞ –∏ –µ—Å–ª–∏ –Ω–µ –æ–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        if user_id == ADMIN_ID or not awaiting_message.get(user_id):
            return

        content_type = message.content_type
        caption = message.caption or ""

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
        forward_text = "üì® –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        if caption:
            forward_text += f"\n–ü–æ–¥–ø–∏—Å—å: {caption}"

        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        if content_type == "text":
            await bot.send_message(ADMIN_ID, f"‚úâÔ∏è {message.text}")
        elif content_type == "photo":
            await bot.send_photo(ADMIN_ID, message.photo[-1].file_id, caption=forward_text)
        elif content_type == "video":
            await bot.send_video(ADMIN_ID, message.video.file_id, caption=forward_text)
        else:
            await bot.send_message(ADMIN_ID, f"{forward_text}\n–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {content_type}")

        keyboard = await default_keyboard()

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(
            DEFAULT_ANSWER,
            reply_markup=keyboard.as_markup()
        )
        awaiting_message[user_id] = False

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_user_message: {e}")
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è")


async def main():
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
